/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package staff_view;

import controller.ExitOptionBackup;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import student_view.LoginForm;

/**
 *
 * @author kuriy
 */
public class SecretaryHomePage extends javax.swing.JFrame {

    static DefaultTableModel model = new DefaultTableModel();
    
    public SecretaryHomePage() {
        initComponents();
        this.setSize(400, 300);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.addListener();

        Object[] object = new Object[]{1, "huy", 2, "cua"};
        addRowMaintenanceTable(object);

        //setMaintain
        SecretaryHomePage.maintenanceFrame.setLocationRelativeTo(null);
        SecretaryHomePage.maintenanceFrame.setResizable(false);
        SecretaryHomePage.maintenanceFrame.setSize(400, 300);

        //setMess
        SecretaryHomePage.messFrame.setLocationRelativeTo(null);
        SecretaryHomePage.messFrame.setResizable(false);
        SecretaryHomePage.messFrame.setSize(400, 300);
        ExitOptionBackup.exitOption(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maintenanceFrame = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        maintenanceTable = new javax.swing.JTable();
        messFrame = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        messTable = new javax.swing.JTable();
        popupMenu = new javax.swing.JPopupMenu();
        forwardToMess = new javax.swing.JMenuItem();
        forwardToMaintenance = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        staffMenu = new javax.swing.JMenu();
        viewMessMenuItem = new javax.swing.JMenuItem();
        viewMaintenanceMenuItem = new javax.swing.JMenuItem();

        maintenanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Room", "Content"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        maintenanceTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        maintenanceTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(maintenanceTable);
        if (maintenanceTable.getColumnModel().getColumnCount() > 0) {
            maintenanceTable.getColumnModel().getColumn(0).setResizable(false);
            maintenanceTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            maintenanceTable.getColumnModel().getColumn(1).setResizable(false);
            maintenanceTable.getColumnModel().getColumn(2).setResizable(false);
            maintenanceTable.getColumnModel().getColumn(3).setResizable(false);
            maintenanceTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        javax.swing.GroupLayout maintenanceFrameLayout = new javax.swing.GroupLayout(maintenanceFrame.getContentPane());
        maintenanceFrame.getContentPane().setLayout(maintenanceFrameLayout);
        maintenanceFrameLayout.setHorizontalGroup(
            maintenanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
        );
        maintenanceFrameLayout.setVerticalGroup(
            maintenanceFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
        );

        messTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room", "Name", "Content"
            }
        ));
        jScrollPane2.setViewportView(messTable);
        if (messTable.getColumnModel().getColumnCount() > 0) {
            messTable.getColumnModel().getColumn(0).setResizable(false);
            messTable.getColumnModel().getColumn(0).setPreferredWidth(1);
            messTable.getColumnModel().getColumn(1).setResizable(false);
            messTable.getColumnModel().getColumn(1).setPreferredWidth(1);
            messTable.getColumnModel().getColumn(2).setResizable(false);
            messTable.getColumnModel().getColumn(2).setPreferredWidth(1);
            messTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout messFrameLayout = new javax.swing.GroupLayout(messFrame.getContentPane());
        messFrame.getContentPane().setLayout(messFrameLayout);
        messFrameLayout.setHorizontalGroup(
            messFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
        );
        messFrameLayout.setVerticalGroup(
            messFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messFrameLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        forwardToMess.setText("Forward To Mess");
        forwardToMess.setToolTipText("");
        forwardToMess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardToMessActionPerformed(evt);
            }
        });
        popupMenu.add(forwardToMess);

        forwardToMaintenance.setText("Forward To Maintenance");
        forwardToMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardToMaintenanceActionPerformed(evt);
            }
        });
        popupMenu.add(forwardToMaintenance);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STAFF Homepage");

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        staffMenu.setText("View");

        viewMessMenuItem.setText("View mess");
        viewMessMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMessMenuItemActionPerformed(evt);
            }
        });
        staffMenu.add(viewMessMenuItem);

        viewMaintenanceMenuItem.setText("View maintenance");
        viewMaintenanceMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewMaintenanceMenuItemMouseClicked(evt);
            }
        });
        viewMaintenanceMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMaintenanceMenuItemActionPerformed(evt);
            }
        });
        staffMenu.add(viewMaintenanceMenuItem);
        viewMaintenanceMenuItem.getAccessibleContext().setAccessibleName("jViewBar");

        jMenuBar1.add(staffMenu);
        staffMenu.getAccessibleContext().setAccessibleName("Form");

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void addRowMessTable(Object[] object) {
        SecretaryHomePage.model = (DefaultTableModel) messTable.getModel();
        model.addRow(object);
    }

    public static void addRowMaintenanceTable(Object[] object) {
        SecretaryHomePage.model = (DefaultTableModel) maintenanceTable.getModel();
        model.addRow(object);
    }


    private void viewMaintenanceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMaintenanceMenuItemActionPerformed
        SecretaryHomePage.maintenanceFrame.setVisible(true);
    }//GEN-LAST:event_viewMaintenanceMenuItemActionPerformed

    private void viewMaintenanceMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewMaintenanceMenuItemMouseClicked

    }//GEN-LAST:event_viewMaintenanceMenuItemMouseClicked

    private void viewMessMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMessMenuItemActionPerformed
        this.messFrame.setVisible(true);
    }//GEN-LAST:event_viewMessMenuItemActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void forwardToMessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardToMessActionPerformed
        int row = messTable.getSelectedRow();

        try {
            String id = String.valueOf(messTable.getValueAt(row, 0));
            String name = String.valueOf(messTable.getValueAt(row, 1));
            String room = String.valueOf(messTable.getValueAt(row, 2));
            String des = String.valueOf(messTable.getValueAt(row, 3));

            WardenMess.addRowMessTable(new Object[]{id, name, room, des});
            JOptionPane.showMessageDialog(rootPane, "Successfull!");
        } catch (ArrayIndexOutOfBoundsException e) {
            /*...*/
        } finally {
            ((DefaultTableModel) messTable.getModel()).removeRow(row);
        }
    }//GEN-LAST:event_forwardToMessActionPerformed

    private void forwardToMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardToMaintenanceActionPerformed
        int row = maintenanceTable.getSelectedRow();

        try {
            String id = String.valueOf(maintenanceTable.getValueAt(row, 0));
            String name = String.valueOf(maintenanceTable.getValueAt(row, 1));
            String room = String.valueOf(maintenanceTable.getValueAt(row, 2));
            String des = String.valueOf(maintenanceTable.getValueAt(row, 3));
            WardenMaintenance.addRowMaintenanceTable(new Object[]{id, name, room, des});
            JOptionPane.showMessageDialog(rootPane, "Successfull!");
        } catch (ArrayIndexOutOfBoundsException e) {
            /*...*/
        } finally {
            ((DefaultTableModel) maintenanceTable.getModel()).removeRow(row);
        }
    }//GEN-LAST:event_forwardToMaintenanceActionPerformed

    private void addListener() {
        maintenanceTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    doubleClickOnTable(maintenanceTable, maintenanceTable);
                }
            }
        });
        messTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    doubleClickOnTable(messTable, messTable);
                }
            }
        });

        //
        maintenanceTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    popupMenu.show(maintenanceTable, e.getX(), e.getY());
                }
            }
        });
        messTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    popupMenu.show(messTable, e.getX(), e.getY());
                }
            }
        });
    }

    private void doubleClickOnTable(Component evt, JTable a) {
        int row = a.getSelectedRow();
        StringBuilder sBuilder = new StringBuilder();

        try {
            String id = String.valueOf(a.getValueAt(row, 0));
            String name = String.valueOf(a.getValueAt(row, 1));
            String room = String.valueOf(a.getValueAt(row, 2));
            String des = String.valueOf(a.getValueAt(row, 3));
            sBuilder.append("ID: ").append(id).append(", ").append("Name: ").append(name).
                    append(", Room: ").append(room).append("\n").append("Description: ").append(des);
        } catch (ArrayIndexOutOfBoundsException e) {

        } finally {
            JOptionPane.showMessageDialog(evt, sBuilder);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecretaryHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecretaryHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecretaryHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecretaryHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecretaryHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem forwardToMaintenance;
    private javax.swing.JMenuItem forwardToMess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logoutButton;
    private static javax.swing.JFrame maintenanceFrame;
    private static javax.swing.JTable maintenanceTable;
    private static javax.swing.JFrame messFrame;
    private static javax.swing.JTable messTable;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenu staffMenu;
    private javax.swing.JMenuItem viewMaintenanceMenuItem;
    private javax.swing.JMenuItem viewMessMenuItem;
    // End of variables declaration//GEN-END:variables
}
